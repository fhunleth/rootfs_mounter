#!/bin/sh

#
# Test that the uboot commands work
#

# To recreate the input environment, run:
#
# printf "newvar=hello\nvar1=2000\nvar2=2\nvar3=4000\nvar4=4" | mkenvimage -s "131072" - | gzip -c | base64
base64_decodez >"$TEST_ROOTFS/dev/sdb" <<EOF
H4sIAAAAAAAAA+3IsQ2DMBRFUc9CQ2uM2z8MhSUKK5FSJFtlwyhgiSnQOc27etPvOz/a5729Ym+9
P9NZS5Sc86gSZcwa9Tpq1JT+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwC0d4gJWhgAAAgA=
EOF

# To recreate the expected resulting environment, run:
#
# printf "anothervar=world\nnewvar=hello\nvar1=5\nvar2=2\nvar3=4000\nvar4=4" | mkenvimage -s "131072" - | gzip -c | base64
base64_decodez >"$WORK/expected_sdb" <<EOF
H4sIAAAAAAAAA+3HwQkCMRRF0TQkxDEufzEDBmYRJhDE2diBjdilmjbknM197/R8vde937c6HuuI
o492S3s95tlqaz391jmuM0ssM5coOee5SpSUPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCf+ALz9rjPAAACAA==
EOF

cat >"$POST_TEST_CHECK" <<EOF
cmp $WORK/expected_sdb $TEST_ROOTFS/dev/sdb
EOF

cat >"$CONFIG" <<EOF
uboot_env.path="/dev/sdb"
uboot_env.start=0
uboot_env.count=256

# Load and print out the original environment
loadenv()
env()

# Change a few things
setenv("var1", 5)
setenv("anothervar", "world")

# Test a variable
getenv("newvar") == "hello" -> print("Found newvar")

# save things back
saveenv()
EOF

cat >"$EXPECTED" <<EOF
fixture: mkdir("/mnt", 755)
fixture: mkdir("/dev", 755)
fixture: mkdir("/sys", 555)
fixture: mkdir("/proc", 555)
fixture: mount("devtmpfs", "/dev", "devtmpfs", 10, data)
fixture: mount("sysfs", "/sys", "sysfs", 14, data)
fixture: mount("proc", "/proc", "proc", 14, data)
var4=4
var3=4000
var2=2
var1=2000
newvar=hello
Found newvar
fixture: mount("/dev/mmcblk0p2", "/mnt", "squashfs", 1, data)
fixture: symlink("/dev/mmcblk0","/dev/rootdisk0")
fixture: symlink("/dev/mmcblk0p6","/dev/rootdisk0p6")
fixture: symlink("/dev/mmcblk0p5","/dev/rootdisk0p5")
fixture: symlink("/dev/mmcblk0p2","/dev/rootdisk0p2")
fixture: symlink("/dev/mmcblk0p1","/dev/rootdisk0p1")
fixture: mount("/dev", "/mnt/dev", "(null)", 8192, data)
fixture: umount("/sys")
fixture: umount("/proc")
fixture: unlinkat("bin", AT_REMOVEDIR)
fixture: unlinkat("usr", AT_REMOVEDIR)
fixture: rmdir("/sys")
fixture: rmdir("/proc")
fixture: mount(".", "/", "(null)", 8192, data)
fixture: chroot(.)
Hello from the chained /sbin/init
EOF

